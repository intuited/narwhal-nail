#!/bin/bash

# Respected environment variables
################################

# The port on which the server will start and to which the client will connect.
NAILGUN_PORT=${NARWHAL_NAILS_PORT:-$NAILGUN_PORT};

# Called to invoke `make` when building the nailgun client.
MAKE="${NARWHAL_NAIL_MAKE:-make}";

# The number of retries to connect to a newly-launched server.
NAILGUN_RETRIES=${NAILGUN_RETRIES:-10}
# The delay between retries.
NAILGUN_RETRY_PAUSE=${NAILGUN_RETRY_PAUSE:-1}

##--  # The number of seconds to wait for the nailgun server to fail.
##--  NAILGUN_START_WAIT=${NAILGUN_START_WAIT:-3}

# The class which will serve as the server entry point.
export NAILGUN_MAIN=${NAILGUN_MAIN:-com.martiansoftware.nailgun.NGServer}



# get the absolute path of the executable
SELF_PATH=$(cd -P -- "$(dirname -- "$0")" && pwd -P) && SELF_PATH="$SELF_PATH/$(basename -- "$0")"

# resolve symlinks
while [ -h "$SELF_PATH" ]; do
	DIR=$(dirname -- "$SELF_PATH")
	SYM=$(readlink -- "$SELF_PATH")
	SELF_PATH=$(cd -- "$DIR" && cd -- $(dirname -- "$SYM") && pwd)/$(basename -- "$SYM")
done

# NARWHAL_ENGINE_HOME is the 2nd ancestor directory of this shell script
export NARWHAL_ENGINE_HOME=$(dirname -- "$(dirname -- "$SELF_PATH")")

BOOTSTRAP=$NARWHAL_ENGINE_HOME/bootstrap.js

if [ -z "$NARWHAL_HOME" ]; then
	export NARWHAL_HOME=$(dirname -- "$(dirname -- "$NARWHAL_ENGINE_HOME")")
fi


# Set up environment variables to be used by the make script
#   that will build the nailgun jar and client if it's not already available
export JARS_DIR="jars";
export LIB_DIR="lib";
export BIN_DIR="bin";
export NAILGUN_CLIENT="$BIN_DIR"/ng;
export NAILGUN_JAR="$JARS_DIR/nailgun.jar";
# This environment variable tells the narwhal_nail makefile where to locate
#   the files it creates links to.
export NARWHAL_PROTOTYPE_ENGINE_HOME="$NARWHAL_HOME/engines/rhino";

# Ensure that the project is built
(cd "$NARWHAL_ENGINE_HOME" && $MAKE) || exit $?


CLASSPATH=$NARWHAL_ENGINE_HOME/jars/jna.jar
BOOTCLASSPATH=$NARWHAL_ENGINE_HOME/jars/js.jar
JAVA_OPTS=""
isOpenJDK=`java -version 2>&1 | grep -i "OpenJDK" | wc -l`

if [ $isOpenJDK -gt 0 ]; then
    JAVA_OPTS="-Xbootclasspath:/usr/lib/jvm/java-6-openjdk/jre/lib/rt.jar"
fi

if [ -n "$NARWHAL_CLASSPATH" ]; then
    CLASSPATH=$NARWHAL_CLASSPATH:$CLASSPATH
fi

if [ "$(which cygpath 2>/dev/null)" ]; then
    CLASSPATH=$(cygpath -wp -- "$CLASSPATH")
    BOOTCLASSPATH=$(cygpath -wp -- "$BOOTCLASSPATH")
    BOOTSTRAP=$(cygpath -wa -- "$BOOTSTRAP")
    export NARWHAL_HOME=$(cygpath -wa -- "$NARWHAL_HOME")
    export NARWHAL_ENGINE_HOME=$(cygpath -wa -- "$NARWHAL_ENGINE_HOME")
fi

if [ -z "$NARWHAL_JS_VERSION" ]; then
    NARWHAL_JS_VERSION=170
fi

if [ -z "$NARWHAL_DEBUGGER" ] || [ "$NARWHAL_DEBUGGER" -eq 0 ]; then
    JAVA_MAIN=org.mozilla.javascript.tools.shell.Main
else
    JAVA_MAIN=org.mozilla.javascript.tools.debugger.Main
fi

# check the java version number in the most complicated fashion imaginable
JAVA_VERSION=$(java -version 2>&1 | awk -F '[ ".]+' 'NR==1 {print $3 "." $4}')
LOWER_VERSION=$( (echo "$JAVA_VERSION"; echo "1.5") | sort -n | head -n 1)
if [ "$LOWER_VERSION" != "1.5" ]; then
    echo "Narwhal on Rhino requires Java 1.5 or higher.  You have $JAVA_VERSION."
    exit
fi

export RLWRAP_COMMAND=narwhal
export JAVA_MAIN CLASSPATH BOOTCLASSPATH BOOTSTRAP;
export NAILGUN_CLASSPATH=$NAILGUN_JAR;
NAILGUNNER="${NAILGUNNER:-$NARWHAL_ENGINE_HOME/nailgunner/nailgunner}"

# drop into shell if there are no additional arguments
if [ $# -lt 1 ]; then
    $NAILGUNNER shoot -version "$NARWHAL_JS_VERSION" -f "$BOOTSTRAP" -f -;
else
    $NAILGUNNER -i shoot -version "$NARWHAL_JS_VERSION" "$BOOTSTRAP" "$0" "$@";
fi;
